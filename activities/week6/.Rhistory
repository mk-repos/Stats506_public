left_join(select(type_by_division, -nhomes), by = c('division', 'type')) %>%
group_by(division, type) %>%
summarize(v = mean( {p_type_repl - p_type}^2 ) / { {1 - fay}^2 },
.groups = 'drop')
type_by_division = type_by_division %>%
left_join(type_by_div_var, by = c('division', 'type'))
type_by_division
?omax
?pmax
filter(type_by_division, type == 'Single-Family Attached') %>%
arrange(desc(p_type))
m = qnorm(.975)
type_by_division = type_by_division %>%
mutate(
se = sqrt(v),
lwr = pmax(p_type - m * se, 0), # 0を下回らないように
upr = pmin(p_type + m * se, 1)
)
filter(type_by_division, type == 'Single-Family Attached') %>%
arrange(desc(p_type))
type_by_division %>% ggplot( aes(x - p_type, y=division)) + geom_point()
type_by_division %>% ggplot( aes(x = p_type, y=division)) + geom_point()
type_by_division %>% filter(type == 'Single-Family Attached') %>% ggplot( aes(x = p_type, y=division)) + geom_point()
type_by_division %>% filter(type == 'Single-Family Attached') %>% ggplot( aes(x = p_type, y=division)) + geom_point()
geom_errorbarh( aes(xmin = lwr, xmax = upr) )
+ geom_errorbarh( aes(xmin = lwr, xmax = upr) )
type_by_division %>% filter(type == 'Single-Family Attached') %>% ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )
type_by_division %>% filter(type == 'Single-Family Attached') %>% ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )
type_by_division %>% filter(type == 'Single-Family Attached') %>% mutate(across(all_of(c('p_type', 'lwr', 'upr')), .funs  = function(x) 100 * x))%>% ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )
type_by_division %>% filter(type == 'Single-Family Attached') %>% mutate(across(all_of(c('p_type', 'lwr', 'upr')), .funs  = function(x) 100 * x))%>% ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )
type_by_division %>% filter(type == 'Single-Family Attached') %>% mutate(across(all_of(c('p_type', 'lwr', 'upr')), .funs  = function(x) 100 * x))%>% ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )type_by_division %>%
filter(type == 'Single-Family Attached') %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
mutate( division = factor( as.character(division), levels = div_ord)) %>%
ggplot( aes(x = p_type, y = division) ) +
geom_point() +
geom_errorbarh( aes(xmin = lwr, xmax = upr) ) +
theme_bw() +
xlab('Single-Family Attached Homes (%)') +
ylab('Census Division') +
xlim(c(0, 12))
type_by_division %>%
filter(type == 'Single-Family Attached') %>%
mutate(across(all_of(c('p_type', 'lwr', 'upr')), .funs  = function(x) 100 * x)) %>%
ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )
type_by_division %>%
filter(type == 'Single-Family Attached') %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x))  %>%
ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )
type_by_division %>%
filter(type == 'Single-Family Attached') %>%
mutate(across(all_of(c('p_type', 'lwr', 'upr')), .fns  = function(x) 100 * x)) %>%
ggplot( aes(x = p_type, y=division)) + geom_point() + geom_errorbarh( aes(xmin = lwr, xmax = upr) )
div_ord = {
type_by_division %>%
filter(type == 'Single-Family Attached') %>%
arrange(p_type)
}$division %>%
as.character()
# point estimateの大きさ順に順番を決めている
type_by_division %>%
filter(type == 'Single-Family Attached') %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
mutate( division = factor( as.character(division), levels = div_ord)) %>%
ggplot( aes(x = p_type, y = division) ) +
geom_point() +
geom_errorbarh( aes(xmin = lwr, xmax = upr) ) +
theme_bw() +
xlab('Single-Family Attached Homes (%)') +
ylab('Census Division') +
xlim(c(0, 12))
grep('^Moun', levels)
with(recs, levels(division))
levels = with(recs, levels(division))
grep('^Moun', levels)
levels[grep('^Moun, levels')]
levels[grep('^Moun', levels)]
new_mt_div = "Mountain Division (AZ, CO, ID, MT, NM, NV, UT, WY)"
levels[grep('^Moun', levels)] = new_mt_div
levels
recs
recs %>%
mutate(division = as.character(division), )
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
ggplot(aes(x = p_type, y = division, color = type)) +
geom_point() +
geom_errorbarh( aes(xmin = lwr, xmax = upr)) +
facet_wrap(-type, ncol = 1) +
theme_bw()
# construct a plot with all available housing types: --------------------------
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
ggplot(aes(x = p_type, y = division, color = type)) +
geom_point() +
geom_errorbarh( aes(xmin = lwr, xmax = upr)) +
facet_wrap(~type, ncol = 1) +
theme_bw()
# construct a plot with all available housing types: --------------------------
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
ggplot(aes(x = p_type, y = division, color = type)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh( aes(xmin = lwr, xmax = upr)) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
aes(xmin = lwr, xmax = upr),
position = position_dodge2(width = 0.5)) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
aes(xmin = lwr, xmax = upr),
position = position_dodge2(width = 0.5),
hight = 0.75) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
# construct a plot with all available housing types: --------------------------
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
ggplot(aes(x = p_type, y = division, color = type)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
hight = 0.75) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
ggplot(aes(x = p_type, y = division, color = type)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5)) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
# construct a plot with all available housing types: --------------------------
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
ggplot(aes(x = p_type, y = division, color = type)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5)) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
ggplot(aes(x = p_type, y = division, color = type)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75) +
#  facet_wrap(~type, ncol = 1) +
theme_bw()
# construct a plot with all available housing types: --------------------------
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
mutate( `Housing Type` = type) %>%
ggplot( aes(x = p_type, y = division,
color = `Housing Type`, shape = `Housing Type`)
) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75,
alpha = 0.75
) +
#  facet_wrap(~type, ncol = 1) +
theme_bw() +
xlab('% of Homes') +
scale_color_manual(
values = c('darkblue', 'red3', 'darkred', 'green4', 'darkgreen')
) +
scale_shape_manual( values = c(18, 16, 1, 17, 2))
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
mutate( `Housing Type` = type) %>%
ggplot( aes(x = p_type, y = division,
color = `Housing Type`, shape = `Housing Type`)
) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75,
alpha = 0.75
) +
#  facet_wrap(~type, ncol = 1) +
theme_bw() +
xlab('% of Homes') +
scale_color_manual(
values = c('darkblue', 'red3', 'darkred', 'green4', 'darkgreen')
) +
scale_shape_manual( values = c(18, 16, 1, 17, 2))
type_by_division %>%
mutate( across(all_of(c('p_type', 'lwr', 'upr')),
.fns = function(x) 100 * x)
) %>%
mutate( `Housing Type` = type) %>%
ggplot( aes(x = p_type, y = division,
color = `Housing Type`, shape = `Housing Type`)
) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(
aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75,
alpha = 0.75
) +
#  facet_wrap(~type, ncol = 1) +
theme_bw() +
xlab('% of Homes') +
scale_color_manual(
values = c('darkblue', 'red3', 'darkred', 'green4', 'darkgreen')
) +
scale_shape_manual( values = c(18, 16, 1, 17, 2))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
path = "./data"
nhanes_demo = sprintf('%s/nahanes_demo.csv', path)
nhanes_ohxden = sprintf('%s/nhanes_ohxden.csv', path)
demo = read_delim(nhanes_demo, delim = ',')
setwd("~/Dropbox (University of Michigan)/GitHub/stats506/week6_activity")
path = "./data"
nhanes_demo = sprintf('%s/nahanes_demo.csv', path)
nhanes_ohxden = sprintf('%s/nhanes_ohxden.csv', path)
demo = read_delim(nhanes_demo, delim = ',')
path = "./data"
nhanes_demo = sprintf('%s/nhanes_demo.csv', path)
nhanes_ohxden = sprintf('%s/nhanes_ohxden.csv', path)
demo = read_delim(nhanes_demo, delim = ',')
ohxden = read_delim(nhanes_ohxden, delim = ',')
select(ohxden, SEQN, OHDDESTS)
View(demo)
select(ohxden, SEQN, OHDDESTS) %>%
left_join(demo, by = SEQN)
select(ohxden, SEQN, OHDDESTS) %>%
left_join(demo, by = 'SEQN')
nhanes_join = select(ohxden, SEQN, OHDDESTS) %>%
left_join(demo, by = 'SEQN')
View(nhanes_join)
nhanes_join %>%
group_by(RIAGENDR) %>%
summarise(n())
nhanes_join %>%
select(RIDAGEYR) %>%
select_if(function(x) any(is.na(x))) %>%
summarise_each(funs(sum(is.na(.))))
nhanes_join %>%
select_if(function(x) any(is.na(x))) %>%
summarise_each(funs(sum(is.na(.))))
summary(nhanes_join)
nhanes_join %>%
transmute(id = SEQN,
gender = ifelse(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = ifelse(age < 20, 1, 0),
college = ifelse(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20'))
nhanes_join %>%
transmute(id = SEQN,
gender = ifelse(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = ifelse(age < 20, 1, 0),
college = ifelse(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20'),
college = replace_na(college, 'No college/<20'))
nhanes_join %>%
transmute(id = SEQN,
gender = ifelse(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = ifelse(age < 20, 1, 0),
college = ifelse(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20'))
nhanes_join %>%
transmute(id = SEQN,
gender = ifelse(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = ifelse(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'))
nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'))
nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'),
exam_status = RIDSTATR,
ohx_status = OHDDESTS)
nhanes_join = nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'),
exam_status = RIDSTATR,
ohx_status = OHDDESTS)
nhanes_join = nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'),
exam_status = RIDSTATR,
ohx_status = OHDDESTS)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
path = "./data"
nhanes_demo = sprintf('%s/nhanes_demo.csv', path)
nhanes_ohxden = sprintf('%s/nhanes_ohxden.csv', path)
demo = read_delim(nhanes_demo, delim = ',')
ohxden = read_delim(nhanes_ohxden, delim = ',')
nhanes_join = select(ohxden, SEQN, OHDDESTS) %>%
left_join(demo, by = 'SEQN')
summary(nhanes_join)
nhanes_join = nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'),
exam_status = RIDSTATR,
ohx_status = OHDDESTS)
nhanes_join
nhanes_join %>%
filter(exam_status == 2 & ohx_status == 1)
nhanes_join %>%
mutate(ohx = ifelse(exam_status == 2 & ohx_status == 1, 'complete', 'missing'))
nhanes_join %>%
mutate(ohx = ifelse(exam_status == 2 & ohx_status == 1, 'complete', 'missing')) %>%
filter(exam_status != 2)
nhanes_join %>%
mutate(ohx = ifelse(exam_status == 2 & ohx_status == 1, 'complete', 'missing'))
nhanes_join %>%
mutate(ohx = ifelse(exam_status == 2 & ohx_status == 1, 'complete', 'missing')) %>%
filter(exam_status == 2)
setwd("~/Documents/Stats506_public/activities/week6")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
path = "./data"
nhanes_demo = sprintf('%s/nhanes_demo.csv', path)
nhanes_ohxden = sprintf('%s/nhanes_ohxden.csv', path)
demo = read_delim(nhanes_demo, delim = ',')
ohxden = read_delim(nhanes_ohxden, delim = ',')
nhanes_join = select(ohxden, SEQN, OHDDESTS) %>%
left_join(demo, by = 'SEQN')
summary(nhanes_join)
nhanes_join = nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 & DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'),
exam_status = RIDSTATR,
ohx_status = OHDDESTS)
nhanes_join
nhanes_join = nhanes_join %>%
mutate(ohx = ifelse(exam_status == 2 & ohx_status == 1, 'complete', 'missing')) %>%
filter(exam_status == 2)
nhanes_join
nhanes_join %>%
group_by(under_20, ohx) %>%
summarise(Count = n())
nhanes_join %>%
group_by(under_20, ohx) %>%
summarise(count = n(), .groups = 'drop_last') %>%
mutate(prop = count / n())
nhanes_join %>%
group_by(under_20, ohx) %>%
summarise(count = n(), .groups = 'drop_last') %>%
mutate(prop = count / sum(count))
nhanes_join %>%
group_by(gender, ohx) %>%
summarise(count = n(), .groups = 'drop_last') %>%
mutate(prop = count / sum(count))
nhanes_join %>%
group_by(college, ohx) %>%
summarise(count = n(), .groups = 'drop_last') %>%
mutate(prop = count / sum(count))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
path = "./data"
nhanes_demo = sprintf('%s/nhanes_demo.csv', path)
nhanes_ohxden = sprintf('%s/nhanes_ohxden.csv', path)
demo = read_delim(nhanes_demo, delim = ',')
ohxden = read_delim(nhanes_ohxden, delim = ',')
nhanes_join = select(ohxden, SEQN, OHDDESTS) %>%
left_join(demo, by = 'SEQN')
summary(nhanes_join)
nhanes_join = nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 | DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'),
exam_status = RIDSTATR,
ohx_status = OHDDESTS)
nhanes_join
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
path = "./data"
nhanes_demo = sprintf('%s/nhanes_demo.csv', path)
nhanes_ohxden = sprintf('%s/nhanes_ohxden.csv', path)
demo = read_delim(nhanes_demo, delim = ',')
ohxden = read_delim(nhanes_ohxden, delim = ',')
nhanes_join = select(ohxden, SEQN, OHDDESTS) %>%
left_join(demo, by = 'SEQN')
summary(nhanes_join)
nhanes_join = nhanes_join %>%
transmute(id = SEQN,
gender = if_else(RIAGENDR == 1,'Male', 'Female'),
age = RIDAGEYR,
under_20 = if_else(age < 20, 1, 0),
college = if_else(DMDEDUC2 == 4 | DMDEDUC2 == 5,
'some college/college graduate',
'No college/<20', missing = 'No college/<20'),
exam_status = RIDSTATR,
ohx_status = OHDDESTS)
nhanes_join
nhanes_join = nhanes_join %>%
mutate(ohx = if_else(exam_status == 2 & ohx_status == 1,
'complete',
'missing')) %>%
filter(exam_status == 2)
nhanes_join
nhanes_join %>%
group_by(under_20, ohx) %>%
summarise(count = n(), .groups = 'drop_last') %>%
mutate(prop = count / sum(count))
nhanes_join %>%
group_by(gender, ohx) %>%
summarise(count = n(), .groups = 'drop_last') %>%
mutate(prop = count / sum(count))
nhanes_join %>%
group_by(college, ohx) %>%
summarise(count = n(), .groups = 'drop_last') %>%
mutate(prop = count / sum(count))
